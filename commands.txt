python --version
c:
cd c:\perflogs
mye\Scripts\activate
python manage.py runserver  or python manage.py runserver 0:8000    in browser http://127.0.0.1:8000/



git init
git status
//pythonanywhere pavelfire thai файл .gitignore содержит файлы и папки не включенные в индекс
git add --all
git commit -m "My commit, this is description"

//связываем локальный репозиторий с github Gihubm
git remote add origin https://github.com/pavelfire/my-first-blog.git
git push -u origin master

bash on pythonanywhere

pip3.6 install --user pythonanywhere
pa_autoconfigure_django.py https://github.com/pavelfire/my-first-blog.git

//безопасность при публикации сайта
https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

изменять код локально, загружать изменения на GitHub, а затем подтягивать изменения на сервер с сайтом

https://docs.djangoproject.com/en/1.11/topics/http/views/

Ctrl + C is stop server

git status
git add --all .    точка обязательна, означает текущую директорию
git commit -m "Changed the HTML for the site."
git push  отправка на github

$ cd ~/pavelfire.pythonanywhere.com
$ git pull
переключись на вкладку Web и нажми кнопку Reload.

python manage.py shell
>>>from blog.models import Post
>>>Post.objets.all()
>>> from django.contrib.auth.models import User
>>> User.objects.all()
>>> me = User.objects.get(username='admin')
>>> Post.objects.create(author=me, title='Sample title', text='Test')
>>>Post.objets.all()

>>> Post.objects.filter(author=me)
Post.objects.filter(title__contains='title')

>>> from django.utils import timezone
>>> Post.objects.filter(published_date__lte=timezone.now())

>>> Post.objects.order_by('created_date')
>>> Post.objects.order_by('-created_date')
>>> Post.objects.filter(published_date__lte=timezone.now()).order_by('published_date')
exit()

$ git status
[...]
$ git add --all .
$ git status
[...]
$ git commit -m "Modified templates to display posts from database."
[...]
$ git push
Затем заходим на PythonAnywhere, открываем Bash console и набираем команду:
PythonAnywhere command-line
$ cd $USER.pythonanywhere.com
$ git pull
[...]

https://www.codecademy.com/learn/learn-java
https://github.com/pavelfire/my-first-blog
https://docs.djangoproject.com/en/3.0/intro/tutorial01/

d:
cd d:\python
python -m venv myvenv #создание виртуального пространства
myvenv\Scripts\activate
python -m pip install --upgrade pip
pip install -r requirements.txt  #inside txt: Django~=2.2.4
python manage.py runserver
python manage.py createsuperuser





https://developer.mozilla.org/ru/docs/Learn/Server-side/Django

https://proglib.io/p/learn-django

https://geekbrains.ru/professions/python_developer?utm_source=proglib&utm_medium=cpm&utm_campaign=proglib_cpm_lp_prof_python_developer_prog&utm_content=header


02 04 2020
git init #в новой пустой папке
git pull https://github.com/pavelfire/my-first-blog.git
python -m venv myvenv
myvenv|Scripts\activate
python -m pip install --upgrade pip
pip install -r requirements.txt #inside txt: Django~=2.2.4
python manage.py runserver


